{"version":3,"file":"imagehandler.min.js","sources":["../src/imagehandler.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Image handler for the teaching tools.\n *\n * @module     theme_enva/imagehandler\n * @copyright  2023 Sonsbeek Media\n * @author     Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n * Save an image from the image handler.\n *\n * @param {Int} contextid The context id\n * @param {String} filearea The file area\n * @param {Object} file The file object\n * @param {String} data The image data\n * @returns {Promise} Resolved with an array file the stored file url.\n */\nconst saveImage = (contextid, filearea, file, data) => {\n    let ajaxParams = {\n        imagefilename: file.name,\n        imagedata: data.split('base64,')[1],\n        filearea: filearea,\n        contextid: contextid,\n    };\n\n    return store({params: ajaxParams});\n};\n\n/**\n * Store an image from the image handler\n * @param {Object} args The request arguments\n * @return {Promise} Resolved with an array file the stored file url.\n */\n const store = args => {\n    const request = {\n        methodname: 'theme_enva_update_image',\n        args: args\n    };\n\n    let promise = Ajax.call([request])[0]\n        .fail(Notification.exception);\n\n    return promise;\n};\n\nexport default {\n    saveImage: saveImage\n};"],"names":["store","args","request","methodname","Ajax","call","fail","Notification","exception","saveImage","contextid","filearea","file","data","ajaxParams","imagefilename","name","imagedata","split","params"],"mappings":";;;;;;;;mLAoDOA,MAAQC,aACLC,QAAU,CACZC,WAAY,0BACZF,KAAMA,aAGIG,cAAKC,KAAK,CAACH,UAAU,GAC9BI,KAAKC,sBAAaC,yBAKZ,CACXC,UA7Bc,CAACC,UAAWC,SAAUC,KAAMC,YACtCC,WAAa,CACbC,cAAeH,KAAKI,KACpBC,UAAWJ,KAAKK,MAAM,WAAW,GACjCP,SAAUA,SACVD,UAAWA,kBAGRV,MAAM,CAACmB,OAAQL"}